datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id        Int       @id @default(autoincrement())
  name      String?
  email     String    @unique
  emailVerified DateTime?
  image     String?
  password  String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  accounts  Account[]
  sessions  Session[]
  links     Link[]
}

model Account {
  id                 Int       @id @default(autoincrement())
  userId             Int
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  user               User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id                 Int       @id @default(autoincrement())
  sessionToken       String    @unique
  userId             Int
  expires            DateTime
  user               User      @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier         String
  token              String    @unique
  expires            DateTime

  @@unique([identifier, token])
}

model Link {
  id         Int       @id @default(autoincrement())
  userId     Int?
  url        String
  shortUrl   String    @unique
  description String?
  clicks     Int       @default(0)
  lastClick  DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  user       User?     @relation(fields: [userId], references: [id])
  visits     LinkVisit[]
}

model LinkVisit {
  id        Int       @id @default(autoincrement())
  linkId    Int
  visitedAt DateTime  @default(now())
  visitorIP String
  referrer  String
  userAgent String
  link      Link      @relation(fields: [linkId], references: [id], onDelete: Cascade)
}